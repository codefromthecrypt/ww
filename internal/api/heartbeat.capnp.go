// Code generated by capnpc-go. DO NOT EDIT.

package api

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// Heartbeat is a peer liveliness message that is broadcast over pubsub.
type Heartbeat struct{ capnp.Struct }

// Heartbeat_TypeID is the unique identifier for the type Heartbeat.
const Heartbeat_TypeID = 0xbbeb920e5748c15b

func NewHeartbeat(s *capnp.Segment) (Heartbeat, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Heartbeat{st}, err
}

func NewRootHeartbeat(s *capnp.Segment) (Heartbeat, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Heartbeat{st}, err
}

func ReadRootHeartbeat(msg *capnp.Message) (Heartbeat, error) {
	root, err := msg.RootPtr()
	return Heartbeat{root.Struct()}, err
}

func (s Heartbeat) String() string {
	str, _ := text.Marshal(0xbbeb920e5748c15b, s.Struct)
	return str
}

func (s Heartbeat) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Heartbeat) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Heartbeat) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Heartbeat) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Heartbeat) Ttl() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Heartbeat) SetTtl(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// Heartbeat_List is a list of Heartbeat.
type Heartbeat_List struct{ capnp.List }

// NewHeartbeat creates a new list of Heartbeat.
func NewHeartbeat_List(s *capnp.Segment, sz int32) (Heartbeat_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Heartbeat_List{l}, err
}

func (s Heartbeat_List) At(i int) Heartbeat { return Heartbeat{s.List.Struct(i)} }

func (s Heartbeat_List) Set(i int, v Heartbeat) error { return s.List.SetStruct(i, v.Struct) }

func (s Heartbeat_List) String() string {
	str, _ := text.MarshalList(0xbbeb920e5748c15b, s.List)
	return str
}

// Heartbeat_Promise is a wrapper for a Heartbeat promised by a client call.
type Heartbeat_Promise struct{ *capnp.Pipeline }

func (p Heartbeat_Promise) Struct() (Heartbeat, error) {
	s, err := p.Pipeline.Struct()
	return Heartbeat{s}, err
}

const schema_b3f8acfcffafd8e8 = "x\xda\x1c\xca\xb1J\xc3@\x00\x06\xe0\xff\xbf$\xc6!" +
	"\x88\x07uq\xc9U\x1ct\xb0VqrRp\xe8\xe8" +
	"M\x0e\x82ri\x0f\x1b\x88m\xc8]\xeb;8\xea\x03" +
	"\xf8\x02\x82\x83\xa388\xf8\x0a\xe2#\x08nN\x0e\xc2" +
	"I\xba~|\xab'GB&\x97\x80\x8e\x93\xa5p\xfe" +
	"68[\xb9\xfb~\x81\xee\x90\xe1\xeb\xf3)\xfc=\xfe" +
	">#a\x0a\xc8\xb5\x1f\xd9Me7\x97\xe6\x06\x0c\xa6" +
	".w\xc7\xd64\xc2\x17\xd6\xf8\xde\xd0\xd4\x93\xfap`" +
	"M\x93/\xe0\x94\xd41E\xb8\xb8\x7f\xd0\xaf\x1f\xb7\xef" +
	"\xd0\xb1\xe0q\x9f\xcc\x80=\xee\x8b\xd0\xd6v\xa6^\x95" +
	"N\x19U[\xdb\xa8\xaa\x9c\xdb\xaa\x9cX\xe7\xd4\xb5u" +
	"\xce\\Y\xe5\xc7f1\x8afjFC\xe3\xbc\x9a\xce" +
	"m\xa3\xeaY^\xb8Y\xd1\x03\xf4r\x14\x031\x01\xb9" +
	"\xbd\x0e\xe8\xcd\x88\xba/Hv\xd8\xda\xce\x06\xa0\xb7\"" +
	"\xea\x03\xc1\xa8\x1c1\x83`\x06\xa6\xdeWL \x98\x80" +
	"\xff\x01\x00\x00\xff\xff ]E^"

func init() {
	schemas.Register(schema_b3f8acfcffafd8e8,
		0xbbeb920e5748c15b)
}
