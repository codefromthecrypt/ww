// Code generated by capnpc-go. DO NOT EDIT.

package api

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// Heartbeat is a liveliness message that is broadcast over pubsub.
type Heartbeat struct{ capnp.Struct }

// Heartbeat_TypeID is the unique identifier for the type Heartbeat.
const Heartbeat_TypeID = 0xbbeb920e5748c15b

func NewHeartbeat(s *capnp.Segment) (Heartbeat, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Heartbeat{st}, err
}

func NewRootHeartbeat(s *capnp.Segment) (Heartbeat, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Heartbeat{st}, err
}

func ReadRootHeartbeat(msg *capnp.Message) (Heartbeat, error) {
	root, err := msg.RootPtr()
	return Heartbeat{root.Struct()}, err
}

func (s Heartbeat) String() string {
	str, _ := text.Marshal(0xbbeb920e5748c15b, s.Struct)
	return str
}

func (s Heartbeat) Ttl() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Heartbeat) SetTtl(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// Heartbeat_List is a list of Heartbeat.
type Heartbeat_List struct{ capnp.List }

// NewHeartbeat creates a new list of Heartbeat.
func NewHeartbeat_List(s *capnp.Segment, sz int32) (Heartbeat_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Heartbeat_List{l}, err
}

func (s Heartbeat_List) At(i int) Heartbeat { return Heartbeat{s.List.Struct(i)} }

func (s Heartbeat_List) Set(i int, v Heartbeat) error { return s.List.SetStruct(i, v.Struct) }

func (s Heartbeat_List) String() string {
	str, _ := text.MarshalList(0xbbeb920e5748c15b, s.List)
	return str
}

// Heartbeat_Promise is a wrapper for a Heartbeat promised by a client call.
type Heartbeat_Promise struct{ *capnp.Pipeline }

func (p Heartbeat_Promise) Struct() (Heartbeat, error) {
	s, err := p.Pipeline.Struct()
	return Heartbeat{s}, err
}

const schema_b3f8acfcffafd8e8 = "x\xda\x1c\xca1J\x03A\x1c\x85\xf1\xf7&\xb3\xae\x88" +
	"\x8a\x03\xb1\xce\xc4\x03D-ll\xd4.\xa5SY\x08" +
	"\xca\x7f\xe3`\x16\xd6d\x99\x99\xe4\x10\x96z\x00/ " +
	"XX\x8a\x85\x85W\x10\x8f \xd8YY\x08#I\xfb" +
	"}\xbf\xad\x83ce\x8aK\xc0\xe9b%\x9f\xbf\x0d\xcf" +
	"6\xef\xbe_\xe0\xbad\xfe\xfa|\xca\x7f\x8f\xbf\xcf\xd0" +
	"%`\xb6\x7fL\xbf4\xfd\x9e\x91#0K[\xef\x8e" +
	"\xbd\x04\x95*/i0\x92v\xd2\x1e\x0e\xbd\x84\xde2" +
	"\x9c\x92NS\xe5\x8b\xfb\x07\xf7\xfaq\xfb\x0e\xa7\x15O" +
	"\xf6\xc8u`\x9fk*/\xe8B\x96\xc9\xd6\xd1\x8am" +
	"\xea\xb9o\xea\x89\x8f\xd1\xde\xf8\x18\xe5\xda\xdb4\x96\xe5" +
	"\xac\xc2T\xaeF\x12\x93\x9d\xce}\xb0\xed\xac\x8a\xb3j" +
	"\x00:\xdd\xd1\x80&`6v\x00\xb7\xda\xa1\xeb*\x96" +
	")5,\xa0X\x80\xff\x01\x00\x00\xff\xff\xda\x03@I"

func init() {
	schemas.Register(schema_b3f8acfcffafd8e8,
		0xbbeb920e5748c15b)
}
