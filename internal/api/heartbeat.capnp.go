// Code generated by capnpc-go. DO NOT EDIT.

package api

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// Heartbeat is an ambient discovery message that is broadcast over pubsub.
type Heartbeat struct{ capnp.Struct }

// Heartbeat_TypeID is the unique identifier for the type Heartbeat.
const Heartbeat_TypeID = 0xbbeb920e5748c15b

func NewHeartbeat(s *capnp.Segment) (Heartbeat, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Heartbeat{st}, err
}

func NewRootHeartbeat(s *capnp.Segment) (Heartbeat, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Heartbeat{st}, err
}

func ReadRootHeartbeat(msg *capnp.Message) (Heartbeat, error) {
	root, err := msg.RootPtr()
	return Heartbeat{root.Struct()}, err
}

func (s Heartbeat) String() string {
	str, _ := text.Marshal(0xbbeb920e5748c15b, s.Struct)
	return str
}

func (s Heartbeat) Id() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Heartbeat) HasId() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Heartbeat) IdBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Heartbeat) SetId(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Heartbeat) Ttl() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Heartbeat) SetTtl(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

// Heartbeat_List is a list of Heartbeat.
type Heartbeat_List struct{ capnp.List }

// NewHeartbeat creates a new list of Heartbeat.
func NewHeartbeat_List(s *capnp.Segment, sz int32) (Heartbeat_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Heartbeat_List{l}, err
}

func (s Heartbeat_List) At(i int) Heartbeat { return Heartbeat{s.List.Struct(i)} }

func (s Heartbeat_List) Set(i int, v Heartbeat) error { return s.List.SetStruct(i, v.Struct) }

func (s Heartbeat_List) String() string {
	str, _ := text.MarshalList(0xbbeb920e5748c15b, s.List)
	return str
}

// Heartbeat_Promise is a wrapper for a Heartbeat promised by a client call.
type Heartbeat_Promise struct{ *capnp.Pipeline }

func (p Heartbeat_Promise) Struct() (Heartbeat, error) {
	s, err := p.Pipeline.Struct()
	return Heartbeat{s}, err
}

const schema_b3f8acfcffafd8e8 = "x\xda\x1c\xca\xb1J\xfb@\x00\xc7\xf1\xdf\xef\x92\xfc\xdb" +
	"!\xfc\xf1\xa0..\xbd\x8a\x83\x0eV\x85NN:\x08" +
	"\xc5\xc9\x9b\x1c\x04\xe5\x92\x1c6`\xd3\x90\xbb*\xbe\x82" +
	"\xa3>\x80/ 88\x8a\x83\x83\xaf >\x82\xe0\xe6" +
	"\xe4 \x9c\xa4\xeb\xf7\xfbY:\xd8\x1329\x03t\x9c" +
	"\xfc\x0b'\xaf\xe3\xe3\xff\xb7_\xcf\xd0=2|~<" +
	"\x86\xdf\x87\x9f'$\xec\x00r\xf9[\x0e:r\xd0\x97" +
	"\xf6\x0a\x0c\xa6.\xb7&\xd64\xc2g\xd6\xf8an\xea" +
	"\xaa\xde\x1d[\xd3\xf4\x17\xe1\x88\xd41E8\xbd\xbb\xd7" +
	"/\xef7o\xd0\xb1\xe0\xfe\x88L\x81\x1d\x1e\x8a\xd0\xd2" +
	"Vv\xbd*\x9d2\x952\xd3\xac\xb4\x95WE\xe9\xf2" +
	"\xd9\xa5m\xae\xd5\xd4:g\xce\xad\xf2\x13\xb3@Y3" +
	"3En\x9cW\xedW\xf5<s\xf3l\x08\xean\x14" +
	"\x031\x01\xb9\xb1\x02\xe8\xb5\x88z[\x90\xec\xb1m\x9b" +
	"\xab\x80^\x8f\xa8G\x82QY0\x85`\x0av\xbc\xbf" +
	"`\x02\xc1\x04\xfc\x0b\x00\x00\xff\xff\x09\x83F\x9e"

func init() {
	schemas.Register(schema_b3f8acfcffafd8e8,
		0xbbeb920e5748c15b)
}
