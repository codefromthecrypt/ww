// Code generated by MockGen. DO NOT EDIT.
// Source: host.go

// Package mock_ww is a generated GoMock package.
package mock_ww

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	cluster "github.com/wetware/casm/pkg/cluster"
)

// MockViewProvider is a mock of ViewProvider interface.
type MockViewProvider struct {
	ctrl     *gomock.Controller
	recorder *MockViewProviderMockRecorder
}

// MockViewProviderMockRecorder is the mock recorder for MockViewProvider.
type MockViewProviderMockRecorder struct {
	mock *MockViewProvider
}

// NewMockViewProvider creates a new mock instance.
func NewMockViewProvider(ctrl *gomock.Controller) *MockViewProvider {
	mock := &MockViewProvider{ctrl: ctrl}
	mock.recorder = &MockViewProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockViewProvider) EXPECT() *MockViewProviderMockRecorder {
	return m.recorder
}

// View mocks base method.
func (m *MockViewProvider) View() cluster.View {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "View")
	ret0, _ := ret[0].(cluster.View)
	return ret0
}

// View indicates an expected call of View.
func (mr *MockViewProviderMockRecorder) View() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "View", reflect.TypeOf((*MockViewProvider)(nil).View))
}
